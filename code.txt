from django.contrib.auth.models import User
from news.models import Author, Category, Post, PostCategory, Comment
from django.utils import timezone

# 1. Создать двух пользователей
user1 = User.objects.create_user(username='user1')
user2 = User.objects.create_user(username='user2')

# 2. Создать связанные объекты Author
author1 = Author.objects.create(user=user1)
author2 = Author.objects.create(user=user2)

# 3. Создать 4 категории
cat1 = Category.objects.create(name='спорт')
cat2 = Category.objects.create(name='политика')
cat3 = Category.objects.create(name='образование')
cat4 = Category.objects.create(name='технологии')

# 4. Создать 2 статьи и 1 новость
post1 = Post.objects.create(
    author=author1,
    type=Post.ARTICLE,
    title='Первая статья',
    text='Это текст первой статьи, очень интересный и длинный.',
    created_at=timezone.now()
)
PostCategory.objects.create(post=post1, category=cat1)

post2 = Post.objects.create(
    author=author2,
    type=Post.ARTICLE,
    title='Вторая статья',
    text='Текст второй статьи для тестирования системы.',
    created_at=timezone.now()
)
PostCategory.objects.create(post=post2, category=cat2)
PostCategory.objects.create(post=post2, category=cat3)

news1 = Post.objects.create(
    author=author1,
    type=Post.NEWS,
    title='Новость о событии',
    text='Краткое содержание новости.',
    created_at=timezone.now()
)
PostCategory.objects.create(post=news1, category=cat4)

# 5. Создать комментарии к постам
comment1 = Comment.objects.create(post=post1, user=user2, text='Интересная статья!', created_at=timezone.now())
comment2 = Comment.objects.create(post=post2, user=user1, text='Хороший материал!', created_at=timezone.now())
comment3 = Comment.objects.create(post=news1, user=user2, text='Спасибо за новость!', created_at=timezone.now())
comment4 = Comment.objects.create(post=post1, user=user1, text='Рад, что понравилось!', created_at=timezone.now())

# 6. Лайки и дизлайки
post1.like()
post2.dislike()
news1.like()

comment1.like()
comment2.like()
comment3.dislike()
comment4.like()

# 7. Обновление рейтингов авторов
author1.update_rating()
author2.update_rating()

# 8. Вывод лучшего автора
best_author = Author.objects.all().order_by('-rating').first()
print(f'Лучший автор: {best_author.user.username}, рейтинг: {best_author.rating}')

# 9. Самая рейтинговая статья
best_post = Post.objects.all().order_by('-rating').first()
print(f'Дата: {best_post.created_at}')
print(f'Автор: {best_post.author.user.username}')
print(f'Рейтинг: {best_post.rating}')
print(f'Заголовок: {best_post.title}')
print(f'Превью: {best_post.preview()}')

# 10. Комментарии к этой статье
comments = Comment.objects.filter(post=best_post)
for c in comments:
    print(f'Дата: {c.created_at}, Пользователь: {c.user.username}, Рейтинг: {c.rating}')
    print(f'Текст: {c.text}')